// Generated by CoffeeScript 1.7.1
(function() {
  var Challenge, Course;

  Course = require('mongoose').model('Course');

  Challenge = require('mongoose').model('Challenge');

  exports.getCourses = function(req, res) {
    return Course.find({}).exec(function(err, collection) {
      return res.send(collection);
    });
  };

  exports.createCourse = function(req, res, next) {
    var courseData;
    courseData = req.body;
    courseData.published = new Date();
    return Course.create(courseData, function(err, course) {
      if (err) {
        res.status(400);
        return res.send({
          reason: err.toString()
        });
      } else {
        res.status(200);
        return res.send(course);
      }
    });
  };

  exports.removeCourse = function(req, res, next) {
    var id;
    id = req.params.id;
    return Course.remove({
      _id: id
    }).exec(function(err) {
      if (err == null) {
        return Challenge.remove({
          courseId: id
        }).exec(function(err) {
          if (err == null) {
            res.status(200);
            return res.end();
          } else {
            res.status(400);
            return res.send({
              reason: "Course was successfully removed. \nHowever there was a problem with its challenges: \n" + (err.toString())
            });
          }
        });
      } else {
        res.status(400);
        return res.send({
          reason: err.toString()
        });
      }
    });
  };

}).call(this);

//# sourceMappingURL=coursesController.map
