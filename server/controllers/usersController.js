// Generated by CoffeeScript 1.7.1
(function() {
  var User, security;

  security = require('../utilities/security');

  User = require('mongoose').model('User');

  exports.getUsers = function(req, res) {
    return User.find({}).exec(function(err, collection) {
      return res.send(collection);
    });
  };

  exports.createUser = function(req, res, next) {
    var userData;
    userData = req.body;
    userData.username = userData.username.toLowerCase();
    userData.salt = security.createSalt();
    userData.hashed_pwd = security.hashPwd(userData.salt, userData.password);
    return User.create(userData, function(err, user) {
      if (err != null) {
        if (err.toString().contains('E11000')) {
          err = new Error('Duplicate Username');
        }
        res.status(400);
        return res.send({
          reason: err.toString()
        });
      } else {
        return req.logIn(user, function(err) {
          return res.send(user);
        });
      }
    });
  };

  exports.updateUser = function(req, res, next) {
    var newPassword, userUpdates;
    userUpdates = req.body;
    if (req.user._id.toString() !== (userUpdates._id != null) && !req.user.hasRole('admin')) {
      res.status(403);
      return res.end;
    } else {
      req.user.username = userUpdates.username.toLowerCase();
      req.user.firstName = userUpdates.firstName;
      req.user.lastName = userUpdates.lastName;
      newPassword = userUpdates.password;
      if ((newPassword != null ? newPassword.length : void 0) > 0) {
        userUpdates.salt = security.createSalt();
        userUpdates.hashed_pwd = security.hashPwd(userUpdates.salt, newPassword);
      }
      return req.user.save(function(err) {
        if (err != null) {
          res.status(400);
          return res.send({
            reason: err.toString()
          });
        } else {
          return res.send(req.user);
        }
      });
    }
  };

}).call(this);

//# sourceMappingURL=usersController.map
