// Generated by CoffeeScript 1.7.1
(function() {
  var Challenge, Course, mongoose;

  mongoose = require('mongoose');

  Course = mongoose.model('Course');

  Challenge = mongoose.model('Challenge');

  exports.getChallenges = function(req, res) {
    var args, courseId;
    courseId = req.params.courseId;
    args = courseId != null ? {
      courseId: courseId
    } : {};
    return Challenge.find(args).exec(function(err, collection) {
      return res.SendIfPossible(collection, err);
    });
  };

  exports.createChallenge = function(req, res, next) {
    var challengeData;
    challengeData = req.body;
    return Course.findOne({
      _id: challengeData.courseId
    }).exec(function(err, course) {
      if (err != null) {
        return res.SendError(err, 'Cannot find the course');
      }
      return Challenge.create(challengeData, function(err, challenge) {
        if (err != null) {
          return res.SendError(err);
        }
        course.challengesCount++;
        return course.save(function(err) {
          return res.SendIfPossible(challenge, err);
        });
      });
    });
  };

  exports.updateChallenge = function(req, res, next) {
    var challengeData, id;
    id = req.params.id;
    challengeData = req.body;
    return Challenge.findOne({
      _id: id
    }).exec(function(err, challenge) {
      if (err != null) {
        return res.SendError(err);
      }
      if (challenge == null) {
        return res.SendError("Challenge not found");
      }
      challenge.title = challengeData.title;
      challenge.description = challengeData.description;
      challenge.level = challengeData.level;
      challenge.control = challengeData.control;
      challenge.config = challengeData.config;
      return challenge.save(function(err) {
        return res.SendOkIfPossible(err);
      });
    });
  };

  exports.removeChallenge = function(req, res, next) {
    var id;
    id = req.params.id;
    return Course.findOne({
      _id: req.params.courseId
    }).exec(function(err, course) {
      if (err != null) {
        return res.SendError(err, 'Cannot find the course');
      }
      return Challenge.remove({
        _id: id
      }).exec(function(err) {
        if (err != null) {
          return res.SendError(err);
        }
        course.challengesCount--;
        return course.save(function(err) {
          return res.SendOkIfPossible(err);
        });
      });
    });
  };

}).call(this);

//# sourceMappingURL=challengesController.map
