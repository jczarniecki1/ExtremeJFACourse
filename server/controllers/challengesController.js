// Generated by CoffeeScript 1.7.1
(function() {
  var Challenge, Course;

  Course = require('mongoose').model('Course');

  Challenge = require('mongoose').model('Challenge');

  exports.getChallenges = function(req, res) {
    var args, courseId;
    courseId = req.params.courseId;
    args = courseId != null ? {
      courseId: courseId
    } : {};
    return Challenge.find(args).exec(function(err, collection) {
      return res.send(collection);
    });
  };

  exports.createChallenge = function(req, res, next) {
    var challengeData;
    challengeData = req.body;
    return Course.findOne({
      _id: challengeData.courseId
    }).exec(function(err, course) {
      if (err != null) {
        res.status(400);
        return res.send({
          reason: 'Cannot find the course'
        });
      } else {
        return Challenge.create(challengeData, function(err, challenge) {
          if (err != null) {
            res.status(400);
            return res.send({
              reason: err.toString()
            });
          } else {
            return course.save(function(err) {
              if (err != null) {
                res.status(400);
                return res.send({
                  reason: err.toString()
                });
              } else {
                res.status(200);
                return res.send(challenge);
              }
            });
          }
        });
      }
    });
  };

  exports.removeChallenge = function(req, res, next) {
    var id;
    id = req.params.id;
    return Challenge.remove({
      _id: id
    }).exec(function(err) {
      if (err == null) {
        res.status(200);
        return res.end();
      } else {
        res.status(400);
        return res.send({
          reason: err.toString()
        });
      }
    });
  };

}).call(this);

//# sourceMappingURL=challengesController.map
