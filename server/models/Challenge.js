// Generated by CoffeeScript 1.7.1
(function() {
  var Challenge, ObjectId, challengeSchema, mongoose;

  mongoose = require('mongoose');

  ObjectId = mongoose.Schema.Types.ObjectId;

  challengeSchema = mongoose.Schema({
    description: {
      type: String,
      required: '{PATH} is required'
    },
    body: {
      type: String,
      required: '{PATH} is required'
    },
    score: {
      type: Number,
      required: '{PATH} is required'
    },
    courseId: {
      type: ObjectId
    },
    avgRating: {
      type: Number,
      min: 0,
      "default": 0
    }
  });

  challengeSchema.methods = {
    updateRating: function() {
      var Rating;
      Rating = require('../models/Rating');
      return Rating.find({
        objectId: this._id
      }).exec((function(_this) {
        return function(err, collection) {
          if (err == null) {
            _this.avgRating = collection.avg(function(x) {
              return x.value;
            });
            return _this.save();
          }
        };
      })(this));
    }
  };

  Challenge = mongoose.model('Challenge', challengeSchema);

}).call(this);

//# sourceMappingURL=Challenge.map
