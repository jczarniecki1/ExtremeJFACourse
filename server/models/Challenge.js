// Generated by CoffeeScript 1.7.1
(function() {
  var Challenge, Mixed, ObjectId, Rating, challengeLevel, challengeSchema, mongoose;

  mongoose = require('mongoose');

  Rating = mongoose.model('Rating');

  ObjectId = mongoose.Schema.Types.ObjectId;

  Mixed = mongoose.Schema.Types.Mixed;

  challengeLevel = {
    values: 'basic advanced expert'.split(' '),
    message: 'You must choose valid level'
  };

  challengeSchema = mongoose.Schema({
    title: {
      type: String,
      required: '{PATH} is required'
    },
    description: {
      type: String,
      required: '{PATH} is required'
    },
    level: {
      type: String,
      "enum": challengeLevel,
      required: '{PATH} is required'
    },
    control: String,
    config: Mixed,
    courseId: ObjectId,
    avgRating: {
      type: Number,
      min: 0,
      "default": 0
    }
  });

  challengeSchema.methods = {
    updateRating: function() {
      return Rating.find({
        objectId: this._id
      }).exec((function(_this) {
        return function(err, collection) {
          if (err == null) {
            _this.avgRating = collection.avg(function(x) {
              return x.value;
            });
            return _this.save();
          }
        };
      })(this));
    }
  };

  Challenge = mongoose.model('Challenge', challengeSchema);

}).call(this);

//# sourceMappingURL=Challenge.map
