// Generated by CoffeeScript 1.7.1
(function() {
  var Message, app, db, env, express, messageSchema, mongoMessage, mongoose, port;

  express = require('express');

  mongoose = require('mongoose');

  env = process.env.NODE_ENV = process.env.NODE_ENV || 'development';

  app = express();

  app.configure(function() {
    app.set('views', __dirname + '/server/views');
    app.set('view engine', 'jade');
    app.use(express.logger('dev'));
    return app.use(express["static"](__dirname + '/public'));
  });

  if (env === 'development') {
    mongoose.connect('mongodb://localhost/jfa-course');
  } else {
    mongoose.connect('mongodb://admin:teach-me@ds047468.mongolab.com:47468/jfa-course');
  }

  db = mongoose.connection;

  db.on('error', console.error.bind(console, 'connection error...'));

  db.once('open', function() {
    return console.log('Database opened successfully');
  });

  messageSchema = mongoose.Schema({
    message: String
  });

  Message = mongoose.model('Message', messageSchema);

  mongoMessage = 'Connecting to database...';

  Message.findOne().exec(function(err, messageDoc) {
    return mongoMessage = messageDoc.message;
  });

  app.get('/partials/:partialPath', function(req, res) {
    return res.render('partials/' + req.params.partialPath);
  });

  app.get('/', function(req, res) {
    return res.render('index', {
      mongoMessage: mongoMessage
    });
  });

  port = process.env.PORT || 3030;

  app.listen(port);

  console.log('Listening on port ' + port + '...');

}).call(this);

//# sourceMappingURL=server.map
