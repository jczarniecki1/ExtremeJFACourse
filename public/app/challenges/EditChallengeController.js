// Generated by CoffeeScript 1.7.1
(function() {
  angular.module('app').controller('EditChallengeController', function($scope, CachedChallenge, $location, $routeParams, ControlsProvider, NotifierService) {
    var challengeId, courseId;
    courseId = $routeParams.courseId;
    challengeId = $routeParams.challengeId;
    $scope.formTitle = "Edit Challenge";
    $scope.levels = ["basic", "advanced", "expert"];
    $scope.controls = ControlsProvider.getControls();
    CachedChallenge.query({
      courseId: courseId
    }).$promise.then(function(collection) {
      return $scope.challengeIndex = collection.findById(challengeId, function(challenge) {
        $scope.challenge = challenge;
        $scope.title = challenge.title;
        $scope.description = challenge.description;
        $scope.level = challenge.level;
        $scope.config = JSON.stringify(challenge.config);
        return $scope.control = challenge.control;
      });
    });
    return $scope.submit = function() {
      var clone, parsedConfig, updatedChallengeData;
      try {
        parsedConfig = JSON.parse($scope.config);
      } catch (_error) {
        return NotifierService.error('Cannot parse configuration to JSON');
      }
      updatedChallengeData = {
        title: $scope.title,
        description: $scope.description,
        level: $scope.level,
        config: parsedConfig,
        control: $scope.control
      };
      clone = angular.copy($scope.challenge);
      angular.extend(clone, updatedChallengeData);
      return clone.$update({
        courseId: courseId,
        id: challengeId
      }).then(function() {
        NotifierService.notify('Challenge updated successfully');
        angular.extend($scope.challenge, updatedChallengeData);
        return $location.path("/courses/" + courseId + "/challenge/" + challengeId);
      }, NotifierService.error);
    };
  });

}).call(this);

//# sourceMappingURL=EditChallengeController.map
