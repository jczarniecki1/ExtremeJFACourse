// Generated by CoffeeScript 1.7.1
(function() {
  angular.module('app').factory('CachedChallenge', function(ChallengeModel, $q) {
    var CachedChallenge, challengeList;
    challengeList = {};
    CachedChallenge = (function() {
      function CachedChallenge() {}

      CachedChallenge.prototype.query = function(args) {
        var _name;
        if ((args != null ? args.courseId : void 0) != null) {
          args = {
            courseId: args.courseId
          };
          return challengeList[_name = args.courseId] != null ? challengeList[_name] : challengeList[_name] = ChallengeModel.query(args);
        } else {
          return challengeList['all'] != null ? challengeList['all'] : challengeList['all'] = ChallengeModel.query();
        }
      };

      CachedChallenge.prototype.remove = function(courseId, id) {
        var $d;
        $d = $q.defer();
        challengeList[courseId].$promise.then(function(collection) {
          return collection.findById(id, function(challenge) {
            return challenge.$remove({
              courseId: courseId,
              id: id
            }).then(function() {
              return collection.remove(challenge) && $d.resolve();
            }, function(response) {
              return $d.reject(response.data.reason);
            });
          }, function() {
            return $d.reject("Challenge not found");
          });
        });
        return $d.promise;
      };

      return CachedChallenge;

    })();
    return new CachedChallenge();
  });

}).call(this);

//# sourceMappingURL=CachedChallenge.map
